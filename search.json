[
  {
    "objectID": "index.html#how-do-i",
    "href": "index.html#how-do-i",
    "title": "",
    "section": "How do I…",
    "text": "How do I…\n\n\nupgrade the version of R I’m using for this project?\nknow which package versions I’m using for this project?\nmove this project from one machine to another?\n\n\n\nWe’re extending the lessons from Day 1 to think about what it means to work with R projects over time. That means that in addition to wanting our individual projects to flow smoothly, we also want to strategize about how to manage different versions of the language, different package versions, and different execution contexts. Working on an old project on a new computer is a lot like trying to put an app into production."
  },
  {
    "objectID": "index.html#focus-areas",
    "href": "index.html#focus-areas",
    "title": "",
    "section": "focus areas",
    "text": "focus areas\n\ninstalling R\nstarting R\n\nuser and project-specific R configuration\n.Renviron, and .Rprofile\n\ninstalling R packages\nupgrading R"
  },
  {
    "objectID": "index.html#clickops",
    "href": "index.html#clickops",
    "title": "",
    "section": "clickOps",
    "text": "clickOps"
  },
  {
    "objectID": "index.html#rig",
    "href": "index.html#rig",
    "title": "",
    "section": "rig",
    "text": "rig\nhttps://github.com/r-lib/rig/"
  },
  {
    "objectID": "index.html#mental-model",
    "href": "index.html#mental-model",
    "title": "",
    "section": "mental model",
    "text": "mental model\npackage managers\ninstall\nlanguage managers\ninstall\nlanguage versions\ninstall\nenvironment managers\ninstall\nprojects\n\nthis pattern repeats itself across languages and operating systems and so is probably worth paying attention to:"
  },
  {
    "objectID": "index.html#package-managers",
    "href": "index.html#package-managers",
    "title": "",
    "section": "package managers",
    "text": "package managers\nsoftware whose job it is to install other software\nwindows: scoop, chocolatey, winget\nmacOS: homebrew\nlinux: homebrew, apt, yum, zypper\n\n\n\n\n\n\nWarning\n\n\nAvoid installing your language with a package manager"
  },
  {
    "objectID": "index.html#language-managers",
    "href": "index.html#language-managers",
    "title": "",
    "section": "language managers",
    "text": "language managers\nusing your package manager, install a language manager\n\nwindows*nix\n\n\nscoop install rig\n\n\nbrew install rig\n\n\n\n pyenv\nnvm\n\n\n\nmany language managers are often written in some language other than the one they are responsible for managing"
  },
  {
    "objectID": "index.html#language-versions",
    "href": "index.html#language-versions",
    "title": "",
    "section": "language versions",
    "text": "language versions\n$ rig add 4.2.1"
  },
  {
    "objectID": "index.html#project-libraries",
    "href": "index.html#project-libraries",
    "title": "",
    "section": "project libraries",
    "text": "project libraries\ninstall.packages(\"renv\")\nrenv::init()"
  },
  {
    "objectID": "index.html#activity",
    "href": "index.html#activity",
    "title": "",
    "section": "activity",
    "text": "activity\n\ninstall rig\ninstall an additional version of R"
  },
  {
    "objectID": "index.html#section",
    "href": "index.html#section",
    "title": "",
    "section": "",
    "text": "Scopes: - system: (usually suffixed by .site, per version of R) - user - project\nuser scoped .Rprofile and .Renviron content is applied last"
  },
  {
    "objectID": "index.html#section-1",
    "href": "index.html#section-1",
    "title": "",
    "section": "",
    "text": ".Renviron and .Rprofile must end in a newline.\n\n\n\n\n\nR will silently throw away the last line if you don’t do this"
  },
  {
    "objectID": "index.html#renviron",
    "href": "index.html#renviron",
    "title": "",
    "section": ".Renviron",
    "text": ".Renviron\n✅ R-specific environment variables\n✅ API keys\n❌ R code"
  },
  {
    "objectID": "index.html#example-.renviron",
    "href": "index.html#example-.renviron",
    "title": "",
    "section": "example .Renviron",
    "text": "example .Renviron\nR_HISTSIZE=100000\nGITHUB_PAT=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\nCONNECT_API_KEY=DaYK2hBUriSBYUEGIAiyXsRJHSjTYJN3\nRETICULATE_PYTHON=.venv/bin/python\n\nthe keys have already been burned, don’t worry"
  },
  {
    "objectID": "index.html#rprofile",
    "href": "index.html#rprofile",
    "title": "",
    "section": ".Rprofile",
    "text": ".Rprofile\ninteractive helpers that run in every session"
  },
  {
    "objectID": "index.html#what-to-put-in-.rprofile",
    "href": "index.html#what-to-put-in-.rprofile",
    "title": "",
    "section": "what to put in .Rprofile",
    "text": "what to put in .Rprofile\n\nSet a default CRAN mirror\nWrite a welcome message\nCustomize R prompt\nSelectively change (but be careful)\n\nOptions, screen width, numeric display\nLoad frequently used interactive packages\nAliases / shortcuts for frequently used functions"
  },
  {
    "objectID": "index.html#why-shouldnt-these-go-in-.rprofile",
    "href": "index.html#why-shouldnt-these-go-in-.rprofile",
    "title": "",
    "section": "why shouldn’t these go in .Rprofile?",
    "text": "why shouldn’t these go in .Rprofile?\n\n\noptions(stringsAsFactors = FALSE)\nlibrary(tidyverse)\nlibrary(ggplot2)\nf <- dplyr::filter\ntheme_set(theme_bw())"
  },
  {
    "objectID": "index.html#devdependencies",
    "href": "index.html#devdependencies",
    "title": "",
    "section": "devDependencies",
    "text": "devDependencies\nIf something appears in a script, it should not be in .Rprofile"
  },
  {
    "objectID": "index.html#why-can-these-go-in-.rprofile",
    "href": "index.html#why-can-these-go-in-.rprofile",
    "title": "",
    "section": "why can these go in .Rprofile?",
    "text": "why can these go in .Rprofile?\nlibrary(usethis)\nlibrary(devtools)"
  },
  {
    "objectID": "index.html#types-of-r-packages",
    "href": "index.html#types-of-r-packages",
    "title": "",
    "section": "Types of R packages",
    "text": "Types of R packages\n\nBinary\nSource"
  },
  {
    "objectID": "index.html#binary",
    "href": "index.html#binary",
    "title": "",
    "section": "Binary",
    "text": "Binary\n\ncompiled ahead of time\nonly R is needed to install"
  },
  {
    "objectID": "index.html#where-to-get-binaries",
    "href": "index.html#where-to-get-binaries",
    "title": "",
    "section": "where to get binaries",
    "text": "where to get binaries\n\n\n\nos\ncran\nppm\n\n\n\n\nwindows\n✅\n✅\n\n\nmacos\n✅\n❌\n\n\nlinux\n❌\n✅"
  },
  {
    "objectID": "index.html#source",
    "href": "index.html#source",
    "title": "",
    "section": "Source",
    "text": "Source\n\ncompiled in development environment\nrequires extra tools when package uses C, C++, Fortan"
  },
  {
    "objectID": "index.html#if-you-dont-have-tools",
    "href": "index.html#if-you-dont-have-tools",
    "title": "",
    "section": "if you don’t have tools",
    "text": "if you don’t have tools\nRunning `R CMD build`...\n* checking for file 'C:\\Users\\WDAGUtilityAccount\\AppData\\Local\\Temp\\RtmpkTUH61\\remotes192027624804\\tidyverse-dplyr-36ef054/DESCRIPTION' ... OK\n* preparing 'dplyr':\n* checking DESCRIPTION meta-information ... OK\n* cleaning src\n* installing the package to process help pages\n      -----------------------------------\n* installing *source* package 'dplyr' ...\n** using staged installation\n** libs\nWarning in system(cmd) : 'make' not found\nERROR: compilation failed for package 'dplyr'\n* removing 'C:/Users/WDAGUT~1/AppData/Local/Temp/Rtmp6hYuyV/Rinst1334d1a23d1/dplyr'\n      -----------------------------------\nERROR: package installation failed"
  },
  {
    "objectID": "index.html#windows-1",
    "href": "index.html#windows-1",
    "title": "",
    "section": "windows",
    "text": "windows\nRtools\nrig add rtools"
  },
  {
    "objectID": "index.html#macos",
    "href": "index.html#macos",
    "title": "",
    "section": "macOS",
    "text": "macOS\nXCode\nxcode-select --install\nor download from the Mac App Store"
  },
  {
    "objectID": "index.html#activity-1",
    "href": "index.html#activity-1",
    "title": "",
    "section": "activity",
    "text": "activity\n\ninstall a package from source\n\ninstall.packages(\"jsonlite\", type = \"source\")"
  },
  {
    "objectID": "index.html#section-2",
    "href": "index.html#section-2",
    "title": "",
    "section": "",
    "text": "environments.rstudio.com"
  },
  {
    "objectID": "index.html#spectrum",
    "href": "index.html#spectrum",
    "title": "",
    "section": "spectrum",
    "text": "spectrum"
  },
  {
    "objectID": "index.html#renv",
    "href": "index.html#renv",
    "title": "",
    "section": "renv",
    "text": "renv\n\n\nrenv has a number of tools that are helpful for adopting a project-based workflow: - lockfile records what packages you use and where you instaled them from - renv::install() can handle installation from remote sources, local sources, package versions, bioconductor, rspm - per-project library isolation with global package cache makes it easy to install experimental versions of packages and then roll back to a stable release if it doesn’t work out"
  },
  {
    "objectID": "index.html#renvinit",
    "href": "index.html#renvinit",
    "title": "",
    "section": "renv::init()",
    "text": "renv::init()\n.libPaths()\nrenv::init()\n.libPaths()\nrenv::deactivate()\n.libPaths()\n\nrun .libPaths() to see what your default package libraries are initialize an renv–you’ll see that the environment is now local to the project note the .Rprofile that gets placed into your project, which runs an R script in renv/activate.R deactivate the environment and check libPaths() again–it should be back to normal"
  },
  {
    "objectID": "index.html#renv.lock",
    "href": "index.html#renv.lock",
    "title": "",
    "section": "renv.lock",
    "text": "renv.lock\n{\n  \"R\": {\n    \"Version\": \"4.1.2\",\n    \"Repositories\": [\n      {\n        \"Name\": \"CRAN\",\n        \"URL\": \"https://cloud.r-project.org\"\n      }\n    ]\n  },\n  \"Packages\": {\n    [...]\n    \"knitr\": {\n      \"Package\": \"knitr\",\n      \"Version\": \"1.39\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Hash\": \"029ab7c4badd3cf8af69016b2ba27493\",\n      \"Requirements\": [\n        \"evaluate\",\n        \"highr\",\n        \"stringr\",\n        \"xfun\",\n        \"yaml\"\n      ]\n    },\n    ...\n  }\n}\n\ncreated from renv::snapshot() by default, identifies dependencies of your code for example: usethis doesn’t usually appear in my lockfiles, because I’m running it interactively, rather than making it a dependency of my projects"
  },
  {
    "objectID": "index.html#renvinstall",
    "href": "index.html#renvinstall",
    "title": "",
    "section": "renv::install()",
    "text": "renv::install()\nor install.packages() with shims enabled\nrenv::install(\"jsonlite\")\nrenv::install(\"jsonlite@1.2\") # at version\nrenv::install(\"jeroen/jsonlite\") # latest\nrenv::install(\"jeroen/jsonlite@80854359976250f30a86a6992c0d8c3b3d95473d\") # at SHA\nrenv::install() # local source"
  },
  {
    "objectID": "index.html#the-junk-drawer",
    "href": "index.html#the-junk-drawer",
    "title": "",
    "section": "the junk drawer",
    "text": "the junk drawer\nfor reprexes, tweets, and other ephemera:\n~/Documents/scratch\n\nI use renv for everything, and have one junk project into which I install things without regard for stability or reproducibililty"
  },
  {
    "objectID": "index.html#rig-1",
    "href": "index.html#rig-1",
    "title": "",
    "section": "rig",
    "text": "rig\nlaunch rstudio from an renv lockfile:\nrig rstudio path/to/renv.lock"
  },
  {
    "objectID": "index.html#activity-2",
    "href": "index.html#activity-2",
    "title": "",
    "section": "activity",
    "text": "activity\n\ninstall dev jsonlite, then roll back to released version"
  },
  {
    "objectID": "index.html#rig-renv",
    "href": "index.html#rig-renv",
    "title": "",
    "section": "rig + renv",
    "text": "rig + renv\n\nsnapshot the project library with renv\ninstall a new version of R\nrestore the project library in the new R version\n\n\n\n\nPersonal R Administration"
  }
]